setwd("C:/Users/Open User/Desktop/Nurudeen-DS/SAIL-Project")
## Load Library
if(!require(pacman)) install.package('pacman')
pacman::p_load(
tidyverse,
esquisse,
readxl,
skimr
)
### Read Metadata
Metadata_Country <- read_excel("API_SM.POP.NETM_DS2_en_excel_v2_424013.xls", sheet = 2)
Metadata_Indicator <- read_excel("API_SM.POP.NETM_DS2_en_excel_v2_424013.xls", sheet = 3)
View(Metadata_Country)
#Create wrangle function
wrangle_data <- function(my_data){
#load data
my_data <- read_excel(my_data, sheet = 1, skip = 3)
# Select columns that are not "Indicator Name" and "Indicator Code"
my_data <- my_data %>%
select(-c(`Indicator Name`, `Indicator Code`, `Country Code`))
# Create a vector with the names of African countries
african_countries <- c(
"Algeria", "Angola", "Benin", "Botswana", "Burkina Faso", "Burundi",
"Cabo Verde", "Cameroon", "Central African Republic", "Chad", "Comoros",
"Congo, Dem. Rep.", "Congo, Rep.", "Djibouti",
"Egypt, Arab Rep.", "Equatorial Guinea", "Eritrea", "Eswatini", "Ethiopia", "Gabon",
"Gambia, The", "Ghana", "Guinea", "Guinea-Bissau", "Cote d'Ivoire", "Kenya",
"Lesotho", "Liberia", "Libya", "Madagascar", "Malawi", "Mali", "Mauritania",
"Mauritius", "Morocco", "Mozambique", "Namibia", "Niger", "Nigeria", "Rwanda",
"Sao Tome and Principe", "Senegal", "Seychelles", "Sierra Leone", "Somalia",
"South Africa", "South Sudan", "Sudan", "Tanzania", "Togo", "Tunisia",
"Uganda", "Zambia", "Zimbabwe"
)
### Filtered african countries
filtered_data <- my_data %>% filter(`Country Name` %in% african_countries)
filtered_data <- filtered_data %>% arrange(`Country Name`)
return(filtered_data)
}
transpose_data <- function(filtered_data){
# Transpose the data frame
tibbled_data <- tibble(filtered_data)
transposed_data <- tibbled_data %>%
pivot_longer(cols = -`Country Name`, names_to = "year", values_to = "Value") %>%
pivot_wider(names_from = `Country Name`, values_from = Value)
# Append "-12-31" to each year to represent December 31st of that year
transposed_data$date <- as.Date(paste0(transposed_data$year, "-12-31"))
#Put the date column at the beginning and drop the year column
trans_data <- transposed_data %>%
select(-year) %>%
select(date, everything())
return(trans_data)
}
filtered_data$total <- filtered_data %>%
select(-c(`Country Name`)) %>%
rowSums()
filtered_data <- wrangle_data("API_SM.POP.NETM_DS2_en_excel_v2_424013.xls")
view(filtered_data)
trans_data <- transpose_data(filtered_data)
view(trans_data)
glimpse(cleaned_data %>% select(date, everything()))
filtered_data$total <- filtered_data %>%
select(-c(`Country Name`)) %>%
rowSums()
view(filtered_data)
### Filtered african countries
filtered_data <- my_data %>% filter(`Country Name` %in% african_countries)
filtered_data <- filtered_data %>% arrange(`Country Name`)
transpose_data <- function(filtered_data){
# Transpose the data frame
tibbled_data <- tibble(filtered_data)
transposed_data <- tibbled_data %>%
pivot_longer(cols = -`Country Name`, names_to = "year", values_to = "Value") %>%
pivot_wider(names_from = `Country Name`, values_from = Value)
# Append "-12-31" to each year to represent December 31st of that year
transposed_data$date <- as.Date(paste0(transposed_data$year, "-12-31"))
#Put the date column at the beginning and drop the year column
trans_data <- transposed_data %>%
select(-year) %>%
select(date, everything())
return(trans_data)
}
filtered_data <- wrangle_data("API_SM.POP.NETM_DS2_en_excel_v2_424013.xls")
filtered_data$total <- filtered_data %>%
select(-c(`Country Name`)) %>%
rowSums()
view(filtered_data)
trans_data <- transpose_data(filtered_data)
view(trans_data)
ggplot(transposed_data, aes(x = date, y = Algeria)) +
geom_line() +
labs(x = "Year", y = "Data Value", title = "Data Trend for Algeria") +
theme_minimal()
trans_data <- transpose_data(filtered_data)
esquisse::esquisser(trans_data)
esquisse::esquisser(filtered_data)
esquisse::esquisser(filtered_data)
ggplot(filtered_data) +
aes(x = `Country Name`, y = `total`) +
geom_col(fill = "#112446") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 85L))
ggplot(filtered_data) +
aes(x = `Country Name`, y = `1983`) +
geom_col(fill = "#112446") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 85L))
ggplot(filtered_data) +
aes(x = `Country Name`, y = `total`) +
geom_col(fill = "#112446") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90L))
ggplot(filtered_data) +
aes(x = `Country Name`, y = `1983`) +
geom_col(fill = "#112446") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90L))
esquisse::esquisser(trans_data)
ggplot(trans_data) +
aes(x = date, y = Nigeria) +
geom_line(colour = "#112446") +
theme_minimal()
pacman::p_load(
tidyverse,
esquisse,
readxl,
skimr,
plotly
)
plot1 <- ggplot(filtered_data) +
aes(x = `Country Name`, y = `1983`) +
geom_col(fill = "#112446") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90L))
plotly(plot1)
ggplotly(plot1)
ggplot(filtered_data) +
aes(x = `Country Name`, y = `1983`) +
geom_col(fill = "#112446") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90L))
ggplot(trans_data) +
aes(x = date, y = Nigeria) +
geom_line(colour = "#112446") +
theme_minimal()
ggplot(filtered_data) +
aes(x = `Country Name`, y = `1983`) +
geom_col(fill = "#112446") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90L))
# Test net migration for all the countries
ggplot(filtered_data) +
aes(x = `Country Name`, y = `total`) +
geom_col(fill = "#112446") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90L))
make_trend(Nigeria)
# Get the trend for the selected countries
make_trend <- function(country) {
ggplot(trans_data) +
aes(x = date, y = country) +
geom_line(colour = "#112446") +
theme_minimal()
}
make_trend(Nigeria)
esquisse::esquisser(trans_data)
# Get the trend for the selected countries
make_trend <- function(data=trans_data, country) {
ggplot(data) +
aes(x = date, y = country) +
geom_line(colour = "#112446") +
theme_minimal()
}
ggplot(trans_data) +
aes(x = date, y = Angola) +
geom_line(colour = "#112446") +
theme_minimal()
make_trend(Nigeria)
make_trend("Nigeria")
# Get the trend for the selected countries
make_trend <- function(data=trans_data, country) {
ggplot(data) +
aes(x = date, y = country) +
geom_line(colour = "#112446") +
theme_minimal()
}
make_trend(Nigeria)
# Get the trend for the selected countries
make_trend <- function(data = trans_data, country) {
country <- enquo(country)  # Capture the input as a quosure
ggplot(data) +
aes(x = date, y = !!country) +  # Use `!!` to unquote the quosure
geom_line(colour = "#112446") +
theme_minimal()
}
# Example usage
make_trend(trans_data, Nigeria)
# Example usage
for (i in c("Nigeria", "Ethopia", "South Africa", "Mali", "Morocco", "Sudan", "Uganda", "Zimbabwe")) {
make_trend(trans_data, Nigeria)
}
# Example usage
for (i in c("Nigeria", "Ethopia", "South Africa", "Mali", "Morocco", "Sudan", "Uganda", "Zimbabwe")) {
make_trend(trans_data, i)
}
# Example usage
for (i in c("Nigeria", "Ethopia", "South Africa", "Mali", "Morocco", "Sudan", "Uganda", "Zimbabwe")) {
make_trend(trans_data, i)
}
ggplot(filtered_data) +
aes(x = `Country Name`, y = `1983`) +
geom_col(fill = "#112446") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90L))
# Example usage
make_trend(i)
# Example usage
make_trend(Nigeria)
# Example usage
make_trend(trans_data, Nigeria)
# Get the trend for the selected countries
make_trend <- function(data = trans_data, country) {
ggplot(data) +
aes(x = date, y = country) +  # Use `!!` to unquote the quosure
geom_line(colour = "#112446") +
theme_minimal()
}
# Example usage
make_trend(trans_data, Nigeria)
# Get the trend for the selected countries
make_trend <- function(data = trans_data, country) {
country <- enquo(country)  # Capture the input as a quosure
ggplot(data) +
aes(x = date, y = !!country) +  # Use `!!` to unquote the quosure
geom_line(colour = "#112446") +
theme_minimal()
}
# Example usage
make_trend(trans_data, Nigeria)
# Example usage
for (i in c("Nigeria", "Ethopia", "South Africa", "Mali", "Morocco", "Sudan", "Uganda", "Zimbabwe")) {
print(make_trend(i))
}
# Get the trend for the selected countries
make_trend <- function(data = trans_data, country) {
country <- sym(country)  # Capture the input as a quosure
ggplot(data) +
aes(x = date, y = !!country) +  # Use `!!` to unquote the quosure
geom_line(colour = "#112446") +
theme_minimal()
}
# Example usage
for (i in c("Nigeria", "Ethopia", "South Africa", "Mali", "Morocco", "Sudan", "Uganda", "Zimbabwe")) {
print(make_trend(i))
}
# Get the trend for the selected countries
make_trend <- function(data = trans_data, country) {
country_sym <- sym(country)  # Convert the string to a symbol
ggplot(data) +
aes(x = date, y = !!country_sym) +  # Use `!!` to unquote the symbol
geom_line(colour = "#112446") +
theme_minimal()
}
# Example usage
countries <- c("Nigeria", "Ethiopia", "South Africa", "Mali", "Morocco", "Sudan", "Uganda", "Zimbabwe")
for (country in countries) {
print(make_trend(trans_data, country))
}
# Get the trend for the selected countries
make_trends <- function(data = trans_data, countries) {
plots <- list()
for (country in countries) {
country_sym <- sym(country)  # Convert the string to a symbol
p <- ggplot(data) +
aes(x = date, y = !!country_sym) +  # Use `!!` to unquote the symbol
geom_line(colour = "#112446") +
labs(title = country) +
theme_minimal()
plots[[country]] <- p
}
return(plots)
}
# Example usage
countries <- c("Nigeria", "Ethiopia", "South Africa", "Mali", "Morocco", "Sudan", "Uganda", "Zimbabwe")
plots <- make_trends(data = trans_data, countries)
# Display plots
for (country in names(plots)) {
print(plots[[country]])
}
# Get the trend for the selected countries
make_trends <- function(data = trans_data, countries) {
data_long <- data %>%
select(date, all_of(countries)) %>%
pivot_longer(cols = -date, names_to = "country", values_to = "value")
ggplot(data_long, aes(x = date, y = value, colour = country)) +
geom_line() +
theme_minimal() +
labs(title = "Trends for Selected Countries", x = "Date", y = "Value", colour = "Country")
}
# Example usage
countries <- c("Nigeria", "Ethiopia", "South Africa", "Mali", "Morocco", "Sudan", "Uganda", "Zimbabwe")
make_trends(data = trans_data, countries)
# Get the trend for the selected countries
make_trends <- function(data = trans_data, countries) {
data_long <- data %>%
select(date, all_of(countries)) %>%
pivot_longer(cols = -date, names_to = "country", values_to = "value")
ggplot(data_long, aes(x = date, y = value, colour = country)) +
geom_line() +
theme_minimal() +
labs(title = "Trends for Selected Countries", x = "Date", y = "Value", colour = "Country")
ylim(-1e6, 1e6)
}
# Example usage
countries <- c("Nigeria", "Ethiopia", "South Africa", "Mali", "Morocco", "Sudan", "Uganda", "Zimbabwe")
make_trends(data = trans_data, countries)
# Get the trend for the selected countries
make_trends <- function(data = trans_data, countries) {
data_long <- data %>%
select(date, all_of(countries)) %>%
pivot_longer(cols = -date, names_to = "country", values_to = "value")
ggplot(data_long, aes(x = date, y = value, colour = country)) +
geom_line() +
theme_minimal() +
labs(title = "Trends for Selected Countries", x = "Date", y = "Value", colour = "Country") +
scale_y_continuous(limits = c(-1000000, 1000000)) +  # Set y-axis limits
}
# Get the trend for the selected countries
make_trends <- function(data = trans_data, countries) {
data_long <- data %>%
select(date, all_of(countries)) %>%
pivot_longer(cols = -date, names_to = "country", values_to = "value")
ggplot(data_long, aes(x = date, y = value, colour = country)) +
geom_line() +
theme_minimal() +
labs(title = "Trends for Selected Countries", x = "Date", y = "Value", colour = "Country") +
scale_y_continuous(limits = c(-1000000, 1000000))  # Set y-axis limits
}
# Example usage
countries <- c("Nigeria", "Ethiopia", "South Africa", "Mali", "Morocco", "Sudan", "Uganda", "Zimbabwe")
make_trends(data = trans_data, countries)
countries <- c("Nigeria", "Ethiopia", "South Africa", "Sudan", "Zimbabwe")
# Plot Trends on a single chat
make_trends(data = trans_data, countries)
transpose_data <- function(filtered_data){
# Transpose the data frame
tibbled_data <- tibble(filtered_data)
transposed_data <- tibbled_data %>%
pivot_longer(cols = -`Country Name`, names_to = "year", values_to = "Value") %>%
pivot_wider(names_from = `Country Name`, values_from = Value)
# Append "-12-31" to each year to represent December 31st of that year
transposed_data$date <- as.Date(paste0(transposed_data$year, "-1-1"))
#Put the date column at the beginning and drop the year column
trans_data <- transposed_data %>%
select(-year) %>%
select(date, everything())
return(trans_data)
}
trans_data <- transpose_data(filtered_data)
# Get the trend for the selected countries
make_trend <- function(data = trans_data, country) {
country_sym <- sym(country)  # Convert the string to a symbol
ggplot(data) +
aes(x = date, y = !!country_sym) +  # Use `!!` to unquote the symbol
geom_line(colour = "#112446") +
theme_minimal()
}
# Get the trend for the selected countries
make_trends <- function(data = trans_data, countries) {
data_long <- data %>%
select(date, all_of(countries)) %>%
pivot_longer(cols = -date, names_to = "country", values_to = "value")
ggplot(data_long, aes(x = date, y = value, colour = country)) +
geom_line() +
theme_minimal() +
labs(title = "Trends for Selected Countries", x = "Date", y = "Value", colour = "Country") +
scale_y_continuous(limits = c(-1000000, 1000000))  # Set y-axis limits
}
countries <- c("Nigeria", "Ethiopia", "South Africa", "Sudan", "Zimbabwe")
# Plot Trends on a single chat
make_trends(data = trans_data, countries)
ggplot(filtered_data) +
aes(x = `Country Name`, y = `1983`) +
geom_col(fill = "#112446") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90L))
# Get the trend for the selected countries
make_trend <- function(data = trans_data, country) {
country_sym <- sym(country)  # Convert the string to a symbol
ggplot(data) +
aes(x = date, y = !!country_sym) +  # Use `!!` to unquote the symbol
geom_line(colour = "#112446") +
theme_minimal() +
labs(title = cat(!!country_sym, "Migration Trend from 1960 - 2023"), x = "Date", y = "Net Migration in Millions")
}
# Plot trend for each country
for (country in countries) {
print(make_trend(trans_data, country))
}
# Get the trend for the selected countries
make_trend <- function(data = trans_data, country) {
country_sym <- sym(country)  # Convert the string to a symbol
ggplot(data) +
aes(x = date, y = !!country_sym) +  # Use `!!` to unquote the symbol
geom_line(colour = "#112446") +
theme_minimal() +
labs(title = cat(country, "Migration Trend from 1960 - 2023"), x = "Date", y = "Net Migration in Millions")
}
# Plot trend for each country
for (country in countries) {
print(make_trend(trans_data, country))
}
# Get the trend for the selected countries
make_trend <- function(data = trans_data, country) {
country_sym <- sym(country)  # Convert the string to a symbol
ggplot(data) +
aes(x = date, y = !!country_sym) +  # Use `!!` to unquote the symbol
geom_line(colour = "#112446") +
theme_minimal() +
labs(title = paste0(country, "Migration Trend from 1960 - 2023"), x = "Date", y = "Net Migration in Millions")
}
# Plot trend for each country
for (country in countries) {
print(make_trend(trans_data, country))
}
# Get the trend for the selected countries
make_trend <- function(data = trans_data, country) {
country_sym <- sym(country)  # Convert the string to a symbol
ggplot(data) +
aes(x = date, y = !!country_sym) +  # Use `!!` to unquote the symbol
geom_line(colour = "#112446") +
theme_minimal() +
labs(title = paste0(country, " Migration Trend from 1960 - 2023"), x = "Date", y = "Net Migration in Millions")
}
# Plot trend for each country
for (country in countries) {
print(make_trend(trans_data, country))
}
# Plot trend for each country
for (country in countries) {
print(make_trend(trans_data, country))
}
# Plot Trends on a single chat
make_trends(data = trans_data, countries)
ggplot(filtered_data) +
aes(x = `Country Name`, y = `1983`) +
geom_col(fill = "#112446") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90L))
# Test net migration for all the countries
ggplot(filtered_data) +
aes(x = `Country Name`, y = `total`) +
geom_col(fill = "#112446") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90L))
# Test net migration for all the countries
ggplot(filtered_data) +
aes(x = `Country Name`, y = `total`) +
geom_col(fill = "#112446") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90L)) +
labs(title = "Sum of Net Migrtion for Each Country", y = "Net Migration in Millions")
# Test net migration for all the countries
ggplot(filtered_data) +
aes(x = `Country Name`, y = `total`) +
geom_col(fill = "#112446") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90L)) +
labs(title = "Cummulative Net Migration for Each Country", y = "Net Migration in Millions")
ggplot(filtered_data) +
aes(x = `Country Name`, y = `1983`) +
geom_col(fill = "#112446") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90L))
ggplot(filtered_data) +
aes(x = `Country Name`, y = `1983`) +
geom_col(fill = "#112446") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90L)) +
labs(title = "Nigeria 1983 Migration in Comparison to Other African Countries", y = "Net Migration in Millions")
ggplot(filtered_data) +
aes(x = `Country Name`, y = `1983`) +
geom_col(fill = "#112446") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90L)) +
labs(title = "Nigeria 1983 Net Migration in Comparison to Other African Countries", y = "Net Migration in Millions")
# Test net migration for all the countries
ggplot(filtered_data) +
aes(x = `Country Name`, y = `total`) +
geom_col(fill = "#112446") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90L)) +
labs(title = "Cummulative Net Migration for African Country", y = "Net Migration in Millions")
# Test net migration for all the countries
ggplot(filtered_data) +
aes(x = `Country Name`, y = `total`) +
geom_col(fill = "#112446") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90L)) +
labs(title = "Cummulative Net Migration for African Countries", y = "Net Migration in Millions")
# Get the trend for the selected countries
make_trends <- function(data = trans_data, countries) {
data_long <- data %>%
select(date, all_of(countries)) %>%
pivot_longer(cols = -date, names_to = "country", values_to = "value")
ggplot(data_long, aes(x = date, y = value, colour = country)) +
geom_line() +
theme_minimal() +
labs(title = "Trends for the Selected Countries", x = "Date", y = "Net Migration in Millions", colour = "Country") +
scale_y_continuous(limits = c(-1000000, 1000000))  # Set y-axis limits
}
# Plot Trends on a single chat
make_trends(data = trans_data, countries)
